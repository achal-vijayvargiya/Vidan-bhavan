version: "3.8"

networks:
  vidhan-bhavan-network:
    driver: bridge

services:
  # Database Services
  postgres:
    image: postgres:15
    container_name: vidhan-bhavan-postgres
    environment:
      POSTGRES_DB: vidhan-pg
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vidhan-bhavan-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: vidhan-bhavan-redis
    volumes:
      - redis_data:/data
    networks:
      - vidhan-bhavan-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend Service (internal only - not exposed to public)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: vidhan-bhavan-backend:latest
    container_name: vidhan-bhavan-backend
    # No public ports exposed - only accessible within the network
    volumes:
      - ./:/app
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/vidhan-pg
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - ENVIRONMENT=production
    networks:
      - vidhan-bhavan-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend build service (builds app and copies to shared volume)
  frontend:
    build:
      context: ../vidhan-bhavan-insights-hub
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=/api
    container_name: vidhan-bhavan-frontend
    environment:
      - NODE_ENV=production
    volumes:
      - frontend_build:/usr/share/nginx/html
    networks:
      - vidhan-bhavan-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Public Nginx reverse proxy and static file server
  nginx:
    image: nginx:alpine
    container_name: vidhan-bhavan-nginx
    ports:
      - "80:80"
      # - "443:443" # Uncomment when SSL is configured
    volumes:
      - ../nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/usr/share/nginx/html:ro
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_started
    networks:
      - vidhan-bhavan-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ | head -n 1 >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:
  frontend_build:
