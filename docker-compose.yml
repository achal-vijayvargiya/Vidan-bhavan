version: "3.8"

networks:
  shared-network:
    external: true

services:
  postgres:
    image: postgres:15
    container_name: vidhan-bhavan-postgres
    environment:
      POSTGRES_DB: vidhan-pg
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shared-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: vidhan-bhavan-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shared-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build: .
    container_name: vidhan-bhavan-backend
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/vidhan-pg
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - ENVIRONMENT=production
    networks:
      - shared-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
